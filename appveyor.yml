version: '1.0.{build}'

image:
  - Visual Studio 2019

branches:
  only:
    - master
    - develop

# set clone depth
clone_depth: 5

platform:
  - x64

configuration:
  - Debug
  - Release

# Build matrix
environment:
  matrix:
    - type: ClangCL
      command: -G "Visual Studio 16 2019" -A x64 -T ClangCL ..\..
      command2: --build . --config %CONFIGURATION%
      testCommand: -VV --output-on-failure -C %CONFIGURATION%
      projectName: $(SRC_PATH)\build\msvs\$(APPVEYOR_PROJECT_NAME).sln
      buildDir: build\msvs
    - type: Ninja
      command: python3 "$env:APPVEYOR_BUILD_FOLDER\scripts\circle_linux_configure_build_test.py" --build_type %CONFIGURATION% -source_dir "$env:APPVEYOR_BUILD_FOLDER"
      command2: -version
      testCommand: -version
      projectName: $(APPVEYOR_BUILD_FOLDER)\build\Ninja\%CONFIGURATION%\build.ninja
      buildDir: build\%CONFIGURATION%

matrix:
  fast_finish: true

install:
  - ps: |
      $CLONE_URL = git remote get-url origin
      $env:SRC_PATH = $env:APPVEYOR_BUILD_FOLDER
      $BRANCH = $env:APPVEYOR_REPO_BRANCH
      cd .. 2> $null
      Remove-Item -LiteralPath "$env:APPVEYOR_PROJECT_NAME" -Force -Recurse
      if ( "$env:APPVEYOR_PULL_REQUEST_NUMBER" -eq "" )
      {
          echo ("Branch <"+"$BRANCH"+"> will be cloned") 2> $null
          git clone -b $BRANCH --single-branch $CLONE_URL 2> $null
          cd "$env:APPVEYOR_BUILD_FOLDER" 2> $null
      }
      else
      {
          git clone $CLONE_URL 2> $null
          cd "$env:APPVEYOR_BUILD_FOLDER" 2> $null
          $BRANCH=("pr"+"$env:APPVEYOR_PULL_REQUEST_NUMBER")
          echo ("Pull request branch <"+"$BRANCH"+"> will be checked out") 2> $null
          $REMOTETOLOCAL = ("pull/"+"$env:APPVEYOR_PULL_REQUEST_NUMBER"+"/head:"+"$BRANCH")
          echo ("REMOTETOLOCAL: "+"$REMOTETOLOCAL") 2> $null
          git fetch origin "$REMOTETOLOCAL" 2> $null
      }
      git checkout --recurse-submodules $BRANCH 2> $null
      git submodule foreach --recursive git checkout master 2> $null
  - cmd: git submodule update --init --recursive
  - ps: |
      $CUR_BRANCH_NAME = git branch --show-current
      echo ("Current branch: "+"$CUR_BRANCH_NAME") 2> $null
      $CUR_SHA1 = git rev-parse HEAD
      echo ("Current commit: "+"$CUR_SHA1") 2> $null
      git submodule status --recursive
      if ( "$env:CONFIGURATION" -eq "Debug")
      {
          if ( "$env:APPVEYOR_PULL_REQUEST_NUMBER" -eq "" )
          {
              $MSG=@"
              <li><b>Build branch:</b> $env:APPVEYOR_REPO_BRANCH<br><li>
              <li><b>Commit author:</b> $env:APPVEYOR_REPO_COMMIT_AUTHOR<br></li>
              <li><b>Commit SHA1:</b> $CUR_SHA1<li>
      "@
              Add-AppveyorMessage "$MSG"
          }
          else
          {
              $MSG=@"
              <li><b>Build pull request:</b> $env:APPVEYOR_PULL_REQUEST_NUMBER ("$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH" -&gt; "$env:APPVEYOR_REPO_BRANCH")<br></li>
              <li><b>Commit author:</b> $env:APPVEYOR_REPO_COMMIT_AUTHOR<br></li>
              <li><b>Commit SHA1 of $env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH head:</b> $CUR_SHA1<br></li>
      "@
              Add-AppveyorMessage "$MSG"
          }
      }

before_build:
  - cmake --version
  - C:\Tools\vcpkg\vcpkg.exe integrate remove
  - cmake -E make_directory %buildDir%
  - cd %buildDir%
  - echo %PATH%
  # - ps: |
  #     clang-cl /?
  - cmake %command%
  - cmake %command2%

build:
  project: $env:projectName
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

test_script:
  - cmd: ctest %testCommand%

notifications:
  - provider: Email
    to:
      - ndtmill@gmail.com
    subject: 'Build {{status}}'
    message:
      <ul>
      {{#jobs}}
        {{{messages.0.message}}}
      {{/jobs}}
      <li><b>Build version:</b> <code>{{buildVersion}}</code></li>
      <li><b>Build status:</b> <code>{{status}}</code></li>
      <li><b>Commit message:</b> <code>{{commitMessage}}</code></li>
      <li><a href="{{buildUrl}}">Build url</a></li>
      </ul>
    on_build_success: true #|false
    on_build_failure: true #|false
    on_build_status_changed: true #|false